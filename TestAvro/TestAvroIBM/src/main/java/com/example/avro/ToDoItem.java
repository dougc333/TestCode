/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.example.avro;  
@SuppressWarnings("all")
/** A record is one node in a To-Do item tree (every record can contain nested sub-records). */
@org.apache.avro.specific.AvroGenerated
public class ToDoItem extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ToDoItem\",\"namespace\":\"com.example.avro\",\"doc\":\"A record is one node in a To-Do item tree (every record can contain nested sub-records).\",\"fields\":[{\"name\":\"status\",\"type\":{\"type\":\"enum\",\"name\":\"ToDoStatus\",\"doc\":\"* `HIDDEN`: not currently visible, e.g. because it becomes actionable in future\\n* `ACTIONABLE`: appears in the current to-do list\\n* `DONE`: marked as done, but still appears in the list\\n* `ARCHIVED`: marked as done and no longer visible\\n* `DELETED`: not done and removed from list (preserved for undo purposes)\",\"symbols\":[\"HIDDEN\",\"ACTIONABLE\",\"DONE\",\"ARCHIVED\",\"DELETED\"]},\"doc\":\"User-selected state for this item (e.g. whether or not it is marked as done)\"},{\"name\":\"title\",\"type\":\"string\",\"doc\":\"One-line summary of the item\"},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"doc\":\"Detailed description (may contain HTML markup)\"},{\"name\":\"snoozeDate\",\"type\":[\"null\",\"long\"],\"doc\":\"Timestamp (milliseconds since epoch) at which the item should go from `HIDDEN` to `ACTIONABLE` status\"},{\"name\":\"subItems\",\"type\":{\"type\":\"array\",\"items\":\"ToDoItem\"},\"doc\":\"List of children of this to-do tree node\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** User-selected state for this item (e.g. whether or not it is marked as done) */
  @Deprecated public com.example.avro.ToDoStatus status;
  /** One-line summary of the item */
  @Deprecated public java.lang.CharSequence title;
  /** Detailed description (may contain HTML markup) */
  @Deprecated public java.lang.CharSequence description;
  /** Timestamp (milliseconds since epoch) at which the item should go from `HIDDEN` to `ACTIONABLE` status */
  @Deprecated public java.lang.Long snoozeDate;
  /** List of children of this to-do tree node */
  @Deprecated public java.util.List<com.example.avro.ToDoItem> subItems;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use {@link \#newBuilder()}. 
   */
  public ToDoItem() {}

  /**
   * All-args constructor.
   */
  public ToDoItem(com.example.avro.ToDoStatus status, java.lang.CharSequence title, java.lang.CharSequence description, java.lang.Long snoozeDate, java.util.List<com.example.avro.ToDoItem> subItems) {
    this.status = status;
    this.title = title;
    this.description = description;
    this.snoozeDate = snoozeDate;
    this.subItems = subItems;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return status;
    case 1: return title;
    case 2: return description;
    case 3: return snoozeDate;
    case 4: return subItems;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: status = (com.example.avro.ToDoStatus)value$; break;
    case 1: title = (java.lang.CharSequence)value$; break;
    case 2: description = (java.lang.CharSequence)value$; break;
    case 3: snoozeDate = (java.lang.Long)value$; break;
    case 4: subItems = (java.util.List<com.example.avro.ToDoItem>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'status' field.
   * User-selected state for this item (e.g. whether or not it is marked as done)   */
  public com.example.avro.ToDoStatus getStatus() {
    return status;
  }

  /**
   * Sets the value of the 'status' field.
   * User-selected state for this item (e.g. whether or not it is marked as done)   * @param value the value to set.
   */
  public void setStatus(com.example.avro.ToDoStatus value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'title' field.
   * One-line summary of the item   */
  public java.lang.CharSequence getTitle() {
    return title;
  }

  /**
   * Sets the value of the 'title' field.
   * One-line summary of the item   * @param value the value to set.
   */
  public void setTitle(java.lang.CharSequence value) {
    this.title = value;
  }

  /**
   * Gets the value of the 'description' field.
   * Detailed description (may contain HTML markup)   */
  public java.lang.CharSequence getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * Detailed description (may contain HTML markup)   * @param value the value to set.
   */
  public void setDescription(java.lang.CharSequence value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'snoozeDate' field.
   * Timestamp (milliseconds since epoch) at which the item should go from `HIDDEN` to `ACTIONABLE` status   */
  public java.lang.Long getSnoozeDate() {
    return snoozeDate;
  }

  /**
   * Sets the value of the 'snoozeDate' field.
   * Timestamp (milliseconds since epoch) at which the item should go from `HIDDEN` to `ACTIONABLE` status   * @param value the value to set.
   */
  public void setSnoozeDate(java.lang.Long value) {
    this.snoozeDate = value;
  }

  /**
   * Gets the value of the 'subItems' field.
   * List of children of this to-do tree node   */
  public java.util.List<com.example.avro.ToDoItem> getSubItems() {
    return subItems;
  }

  /**
   * Sets the value of the 'subItems' field.
   * List of children of this to-do tree node   * @param value the value to set.
   */
  public void setSubItems(java.util.List<com.example.avro.ToDoItem> value) {
    this.subItems = value;
  }

  /** Creates a new ToDoItem RecordBuilder */
  public static com.example.avro.ToDoItem.Builder newBuilder() {
    return new com.example.avro.ToDoItem.Builder();
  }
  
  /** Creates a new ToDoItem RecordBuilder by copying an existing Builder */
  public static com.example.avro.ToDoItem.Builder newBuilder(com.example.avro.ToDoItem.Builder other) {
    return new com.example.avro.ToDoItem.Builder(other);
  }
  
  /** Creates a new ToDoItem RecordBuilder by copying an existing ToDoItem instance */
  public static com.example.avro.ToDoItem.Builder newBuilder(com.example.avro.ToDoItem other) {
    return new com.example.avro.ToDoItem.Builder(other);
  }
  
  /**
   * RecordBuilder for ToDoItem instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ToDoItem>
    implements org.apache.avro.data.RecordBuilder<ToDoItem> {

    private com.example.avro.ToDoStatus status;
    private java.lang.CharSequence title;
    private java.lang.CharSequence description;
    private java.lang.Long snoozeDate;
    private java.util.List<com.example.avro.ToDoItem> subItems;

    /** Creates a new Builder */
    private Builder() {
      super(com.example.avro.ToDoItem.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.example.avro.ToDoItem.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.status)) {
        this.status = data().deepCopy(fields()[0].schema(), other.status);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.title)) {
        this.title = data().deepCopy(fields()[1].schema(), other.title);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.description)) {
        this.description = data().deepCopy(fields()[2].schema(), other.description);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.snoozeDate)) {
        this.snoozeDate = data().deepCopy(fields()[3].schema(), other.snoozeDate);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.subItems)) {
        this.subItems = data().deepCopy(fields()[4].schema(), other.subItems);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing ToDoItem instance */
    private Builder(com.example.avro.ToDoItem other) {
            super(com.example.avro.ToDoItem.SCHEMA$);
      if (isValidValue(fields()[0], other.status)) {
        this.status = data().deepCopy(fields()[0].schema(), other.status);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.title)) {
        this.title = data().deepCopy(fields()[1].schema(), other.title);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.description)) {
        this.description = data().deepCopy(fields()[2].schema(), other.description);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.snoozeDate)) {
        this.snoozeDate = data().deepCopy(fields()[3].schema(), other.snoozeDate);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.subItems)) {
        this.subItems = data().deepCopy(fields()[4].schema(), other.subItems);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'status' field */
    public com.example.avro.ToDoStatus getStatus() {
      return status;
    }
    
    /** Sets the value of the 'status' field */
    public com.example.avro.ToDoItem.Builder setStatus(com.example.avro.ToDoStatus value) {
      validate(fields()[0], value);
      this.status = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'status' field has been set */
    public boolean hasStatus() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'status' field */
    public com.example.avro.ToDoItem.Builder clearStatus() {
      status = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'title' field */
    public java.lang.CharSequence getTitle() {
      return title;
    }
    
    /** Sets the value of the 'title' field */
    public com.example.avro.ToDoItem.Builder setTitle(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.title = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'title' field has been set */
    public boolean hasTitle() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'title' field */
    public com.example.avro.ToDoItem.Builder clearTitle() {
      title = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'description' field */
    public java.lang.CharSequence getDescription() {
      return description;
    }
    
    /** Sets the value of the 'description' field */
    public com.example.avro.ToDoItem.Builder setDescription(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.description = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'description' field has been set */
    public boolean hasDescription() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'description' field */
    public com.example.avro.ToDoItem.Builder clearDescription() {
      description = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'snoozeDate' field */
    public java.lang.Long getSnoozeDate() {
      return snoozeDate;
    }
    
    /** Sets the value of the 'snoozeDate' field */
    public com.example.avro.ToDoItem.Builder setSnoozeDate(java.lang.Long value) {
      validate(fields()[3], value);
      this.snoozeDate = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'snoozeDate' field has been set */
    public boolean hasSnoozeDate() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'snoozeDate' field */
    public com.example.avro.ToDoItem.Builder clearSnoozeDate() {
      snoozeDate = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'subItems' field */
    public java.util.List<com.example.avro.ToDoItem> getSubItems() {
      return subItems;
    }
    
    /** Sets the value of the 'subItems' field */
    public com.example.avro.ToDoItem.Builder setSubItems(java.util.List<com.example.avro.ToDoItem> value) {
      validate(fields()[4], value);
      this.subItems = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'subItems' field has been set */
    public boolean hasSubItems() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'subItems' field */
    public com.example.avro.ToDoItem.Builder clearSubItems() {
      subItems = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public ToDoItem build() {
      try {
        ToDoItem record = new ToDoItem();
        record.status = fieldSetFlags()[0] ? this.status : (com.example.avro.ToDoStatus) defaultValue(fields()[0]);
        record.title = fieldSetFlags()[1] ? this.title : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.description = fieldSetFlags()[2] ? this.description : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.snoozeDate = fieldSetFlags()[3] ? this.snoozeDate : (java.lang.Long) defaultValue(fields()[3]);
        record.subItems = fieldSetFlags()[4] ? this.subItems : (java.util.List<com.example.avro.ToDoItem>) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
