<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0059)http://cseweb.ucsd.edu/classes/sp06/cse152/assignments.html -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=windows-1252"><title>CSE 152: Assignments</title>

<meta content="Microsoft FrontPage 4.0" name="GENERATOR"><meta name="keywords" content="image segmentation, shape matching, segmentation based image compression, segmentation based image coding, four color theorem, four colour theorem"><link rel="stylesheet" href="./CSE 152_ Assignments_files/stylesheet.css"></head>


<body background="./CSE 152_ Assignments_files/bg_seal1.jpg">

<h1 align="center">Assignments</h1>
<hr>

<p></p><li>
Here is a <a href="http://www.cse.ucsd.edu/classes/sp06/cse152/hw4.pdf">PDF</a> file with Assignment 4. 
<br>
&nbsp;&nbsp;&nbsp; Face images for the assignment are in this zip file: <a href="http://www.cse.ucsd.edu/classes/sp06/cse152/images/assgn4/yaleBfaces.zip">yaleBfaces.zip</a>.<br><br>
&nbsp;&nbsp;&nbsp; Here is some Matlab code to read in the input images: <a href="http://www.cse.ucsd.edu/classes/sp06/cse152/getAmatrix.m">getAmatrix.m</a>. The function <b>getAmatrix</b> accepts <i>exactly</i> two arguments:
<ul>
<li>If you call <i>A = getAmatrix(i, j)</i>, columns of the output matrix <i>A</i> are the vectorized images of person <i>j</i> in subset <i>i</i>.</li>
<li>If you call <i>A = getAmatrix(i, [])</i>, columns of the output matrix <i>A</i> are the vectorized images of all persons in subset <i>i</i>.</li>
<li>If you call <i>A = getAmatrix([], j)</i>, columns of the output matrix <i>A</i> are the vectorized images of person <i>j</i> across all subsets.</li>
<li>If you call <i>A = getAmatrix([],[])</i>, columns of the output matrix <i>A</i> are the vectorized images of all persons across all subsets.</li>
</ul>
If you wish, you can write your own Matlab function to perform this task. In fact, you are encouraged to do so. Also, it is possible to write a much smaller code to achieve the same effect using Matlab's UI building support. Try to write it!
<br><br>
<b>Turn-in:</b> A <i>hard-copy</i> of the solutions, which contains the write-up <u>and</u> all your tables, code and figures. Due Monday, <b>June 12</b>, 6:00 PM.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i>E-mail</i> a zip file (named <i>your_name.zip/tar/tgz/....</i>) of your  code and figures to the TA, with the subject line "CSE 152 Assignment 4". Due Sunday, <b>June 11</b>, 6:00 PM.<br><br>

If you are writing the hardcopy electronically (PDF or Word), you can e-mail it to the TA if you don't want to make the trip to the CSE building and turn it in. Ensure that all the code and figures are included at appropriate places if you choose this option to turn in your "hard-copy".
</li><p></p>
<hr>
<hr>

<p></p><li>
Here is a <a href="http://www.cse.ucsd.edu/classes/sp06/cse152/hw3.pdf">PDF</a> file with Assignment 3. 
<br>
&nbsp;&nbsp;&nbsp; Test images for the assignment are <a href="http://www.cse.ucsd.edu/classes/sp06/cse152/images/assgn3/blocks1.gif">blocks1.gif</a> ,  <a href="http://www.cse.ucsd.edu/classes/sp06/cse152/images/assgn3/blocks2.gif">blocks2.gif</a>,  <a href="http://www.cse.ucsd.edu/classes/sp06/cse152/images/assgn3/desk1.gif">desk1.gif</a>, <a href="http://www.cse.ucsd.edu/classes/sp06/cse152/images/assgn3/desk2.gif">desk2.gif</a>, <a href="http://www.cse.ucsd.edu/classes/sp06/cse152/images/assgn3/tsukuba-l.png">tsukuba-l.png</a> and <a href="http://www.cse.ucsd.edu/classes/sp06/cse152/images/assgn3/tsukuba-r.png">tsukuba-r.png</a>.<br>
&nbsp;&nbsp;&nbsp; Code that you might need to use: <a href="http://www.cse.ucsd.edu/classes/sp06/cse152/images/assgn3/clickPoints.m">clickPoints.m</a> , <a href="http://www.cse.ucsd.edu/classes/sp06/cse152/images/assgn3/drawLine.m">drawLine.m</a>.
<br><br>
<b>Turn-in:</b> A <i>hard-copy</i> of the solutions, which contains the write-up <u>and</u> all your code and figures. Due Tuesday, <b>May 30</b>, in class.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i>E-mail</i> a zip file (named <i>your_name.zip/tar/tgz/....</i>) of your  code and figures to the TA, with the subject line "CSE 152 Assignment 3". Due Tuesday, <b>May 30</b>, 11:00 AM.<br><br>
</li><p></p>
<hr>
<hr>

<p></p><li>
Here is a <a href="http://www.cse.ucsd.edu/classes/sp06/cse152/hw2.pdf">PDF</a> file with Assignment 2. 
<br>
&nbsp;&nbsp;&nbsp; Test images for the assignment are <a href="http://www.cse.ucsd.edu/classes/sp06/cse152/images/assgn2/figure1.png">figure1.png</a> ,  <a href="http://www.cse.ucsd.edu/classes/sp06/cse152/images/assgn2/hole.png">hole.png</a>,  <a href="http://www.cse.ucsd.edu/classes/sp06/cse152/images/assgn2/fingerprint.jpg">fingerprint.jpg</a>, <a href="http://www.cse.ucsd.edu/classes/sp06/cse152/images/assgn2/components1.png">components1.png</a>, <a href="http://www.cse.ucsd.edu/classes/sp06/cse152/images/assgn2/components2.png">components2.png</a> and <a href="http://www.cse.ucsd.edu/classes/sp06/cse152/images/assgn2/coins.png">coins.png</a>.<br>
&nbsp;&nbsp;&nbsp; <b>Avoid loops in Matlab!</b>
<br><br>
<b>Connected Component Labeling:</b> Many of you have had problems with recursion limits. Here are some alternatives:
<ol>
<li>Do connected component counting for a much smaller image. Say, an image reduced to one-fourth the size in each dimension. In Matlab, you can do: <b>imresize(image, 0.25, 'bilinear')</b>. But be careful that the morphological operation you perform for separating out the coins must be on the true size image.
</li><li>Also, increase the recursion limit in Matlab. Use <b>set(0, 'recursionlimit', <i>limitnumber</i>)</b>, where <i>limitnumber</i> is, say, 1000.</li>
</ol>
</li><li>Alternatively, use the following code, <a href="http://www.cse.ucsd.edu/classes/sp06/cse152/explore.m">explore.m</a> for connected component counting. It emulates a stack in Matlab. Use this code only as a last resort as you might lose some credit (say, 2 points) for using this.</li>
<br><br>
<b>What Matlab functions can you use:</b> This should be fairly obvious. You are <b>not</b> expected to use Matlab's in-built erosion function. Follow the description in the question, binarize your images, construct your structuring elements and write code to perform erosion (or other operation) by comparing all pixel's neighborhoods to the structuring element. However, you <b>can</b> (and should) use any filtering operations in Matlab to avoid looping over all the individual pixels. See lecture notes on filtering for inspiration on what Matlab operation is helpful here.
<br><br>
<b>Dealing with "corner cases":</b> If you have caught on with filtering operations in Matlab, probably you do not need this. But in case you do, you can pad your n x n images on all sides with backgound pixels to get, say, an (n+3) x (n+3) image and then apply your morphological operation to this larger image.

<br><br>
<b>Turn-in:</b> A <i>hard-copy</i> of the solutions, with answers to any questions asked, Matlab code and figures. Due Tuesday, <b>May 09</b>, in class.<br> 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i>E-mail</i> a zip file (named <i>your_name.zip/tar/tgz/....</i>) of your Matlab code and figures to the TA, with the subject line "CSE 152 Assignment 2". Due Tuesday, <b>May 09</b>, 11:00 AM.<br><br>

<p></p>
<hr>
<hr>

<p></p><li>
Here is a <a href="http://www.cse.ucsd.edu/classes/sp06/cse152/hw1.pdf">PDF</a> file with Assignment 1. 
<br>
&nbsp;&nbsp;&nbsp; Test images for the assignment are <a href="http://www.cse.ucsd.edu/classes/sp06/cse152/images/assgn1/rectangles.jpg">rectangles.jpg</a> ,  <a href="http://www.cse.ucsd.edu/classes/sp06/cse152/images/assgn1/circles.jpg">circles.jpg</a> and  <a href="http://www.cse.ucsd.edu/classes/sp06/cse152/images/assgn1/gradients.jpg">gradients.jpg</a>.
<br><br>
&nbsp;&nbsp;&nbsp; <b>Turn-in:</b> A <i>hard-copy</i> of the solutions, with answers to any questions asked, Matlab code and figures. Due Thursday, <b>April 27</b>, in class.<br> 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i>E-mail</i> a zip file of your Matlab code and figures to the TA, with the subject line "CSE 152 Assignment 1". Due Thursday, <b>April 27</b>, 11:00 AM.<br><br>
<p></p></li><li>
<a href="http://www.cse.ucsd.edu/classes/sp06/cse152/hw1sol.pdf">Solution</a> to Assignment 1. Solution to Question 2 will be included after Assignment 2 is turned in.
<br><br>
</li><p></p>
<hr>
<hr>
<p></p><li>
Here is a <a href="http://www.cse.ucsd.edu/classes/sp06/cse152/hw0.pdf">PDF</a> file with Assignment 0, a description of what to turn in and a tutorial introduction to Matlab. 
<br>
&nbsp;&nbsp;&nbsp; Test image for the assignment is <a href="http://www.cse.ucsd.edu/classes/sp06/cse152/flag.jpg">here</a>.
</li><p></p>
<hr>
<p align="right"><i>Last updated May 20, 2006.</i></p>

</body></html>