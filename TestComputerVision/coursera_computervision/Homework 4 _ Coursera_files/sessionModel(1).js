define("bundles/assess/assessmentTypes/phoenixQuiz/openSinglePage/sessionModel",["require","exports","module","q","underscore","bundles/assess/assessmentTypes/SessionModel","bundles/assess/framework/QuestionCollection","js/lib/fsm","pages/open-course/assessment/models/openSinglePage/evaluation"],function(require,exports,module){"use strict";var t=require("q"),_=require("underscore"),e=require("bundles/assess/assessmentTypes/SessionModel"),s=require("bundles/assess/framework/QuestionCollection"),n=require("js/lib/fsm"),i=require("pages/open-course/assessment/models/openSinglePage/evaluation"),o=e.extend(_.extend({},n.FiniteStateMachine,{defaults:{state:"nothing",sessionId:"",attemptIndex:null,questionInstances:[],unansweredQuestions:0},relations:{questionInstances:s},logTransitions:!1,fsm:{states:["nothing","loading","load-error","unsubmitted","submitting","submit-error","submitted"],transitions:{loading:["nothing"],"load-error":["loading"],unsubmitted:["loading"],submitting:["unsubmitted","submit-error"],"submit-error":["submitting"],submitted:["loading","submitting"]}},initialize:function initialize(e,t){_(this).extend(_(t).pick("assessmentClient")),_.bindAll(this,"onFetchSessionIdSuccess","getOrCreateAttempt","onGetOrCreateAttemptSuccess","onLoadError","onSubmitSuccess","onSubmitError"),this.listenTo(this.get("questionInstances"),"add",this.onQuestionAdded),this.set("evaluation",new i)},submit:function submit(){this.transition("submitting");var t={attemptIndex:this.get("attemptIndex"),responses:this.toResponseJson()},e=this.get("sessionId");return this.assessmentClient.callAction(e,"submitResponses",t).then(this.onSubmitSuccess,this.onSubmitError)},retake:function retake(){this.set(this.defaults),this.get("evaluation").reset(),this.trigger("questions:reset"),this.fetch()},toResponseJson:function toResponseJson(){return this.get("questionInstances").invoke("toResponseJson")},setState:function setState(t){this.get("questionInstances").addMerge(t.result.questions),this.get("evaluation").set(t.result.evaluation)},onLoadError:function onLoadError(t){this.transition("load-error")},onFetchSessionIdSuccess:function onFetchSessionIdSuccess(t){return this.set("sessionId",t),this.get("sessionId")},onGetOrCreateAttemptSuccess:function onGetOrCreateAttemptSuccess(t){this.set("attemptIndex",t.result.attemptIndex),this.setState(t);var e="Submitted"===t.result.state,s=e?"submitted":"unsubmitted";this.transition(s)},onQuestionAdded:function onQuestionAdded(t){this.listenTo(t,"change",this.updateUnansweredQuestions);var e=this.get("questionInstances").indexOf(t);this.trigger("question:added",t,e)},updateUnansweredQuestions:function updateUnansweredQuestions(){var t=this.get("questionInstances").filter(function(t){return!t.get("isAnswered")});this.set("unansweredQuestions",t.length)},onSubmitSuccess:function onSubmitSuccess(t){this.setState(t),this.transition("submitted")},onSubmitError:function onSubmitError(t){this.transition("submit-error")},fetch:function fetch(){this.transition("loading"),this.fetchSessionId().then(this.getOrCreateAttempt).done()},fetchSessionId:function fetchSessionId(){var e=this.get("sessionId");if(e)return t.fcall(_.constant(e));return this.assessmentClient.getOrCreateSession().then(this.onFetchSessionIdSuccess,this.onLoadError)},getOrCreateAttempt:function getOrCreateAttempt(){var t=this.get("sessionId");return _(this.get("attemptIndex")).isNumber()?this.assessmentClient.callAction(t,"getAttempt",{attemptIndex:this.get("attemptIndex")}).then(this.onGetOrCreateAttemptSuccess,this.onLoadError):this.assessmentClient.callAction(t,"getOrCreateAttempt").then(this.onGetOrCreateAttemptSuccess,this.onLoadError)}}));module.exports=o});