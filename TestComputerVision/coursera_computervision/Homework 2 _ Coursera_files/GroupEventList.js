define("bundles/group-events/models/GroupEventList",["require","exports","module","underscore","bundles/ondemand/utils/ToStringBuilder"],function(require,exports,module){"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var e=function(){function defineProperties(r,n){for(var t=0;t<n.length;t++){var e=n[t];e.enumerable=e.enumerable||!1,e.configurable=!0,"value"in e&&(e.writable=!0),Object.defineProperty(r,e.key,e)}}return function(e,t,n){return t&&defineProperties(e.prototype,t),n&&defineProperties(e,n),e}}(),_=require("underscore"),t=require("bundles/ondemand/utils/ToStringBuilder"),n=function(){function GroupEventList(e){_classCallCheck(this,GroupEventList),this.events=e||[]}return e(GroupEventList,[{key:"toArray",value:function toArray(){return this.events}},{key:"size",value:function size(){return this.events.length}},{key:"hasEvents",value:function hasEvents(){return this.size()>0}},{key:"get",value:function get(e){return this.events[e]}},{key:"add",value:function add(e){var t=this.getEventIndex(e);-1===t?this.events.push(e):this.events[t]=e}},{key:"remove",value:function remove(t){var e=this.getEventIndex(t);-1!==e&&this.events.splice(e,1)}},{key:"sort",value:function sort(e){return this.events.sort(e),this}},{key:"getEventIndex",value:function getEventIndex(e){return _(this.events).findIndex(function(t){return t.id===e.id})}},{key:"getPastEvents",value:function getPastEvents(){return this.getEventsBefore(Date.now())}},{key:"getFutureEvents",value:function getFutureEvents(){return this.getEventsAfter(Date.now())}},{key:"getEventsBefore",value:function getEventsBefore(e){return this.filterEvents(function(t){return t.endTime<e})}},{key:"getEventsAfter",value:function getEventsAfter(e){return this.filterEvents(function(t){return t.endTime>=e})}},{key:"filterEvents",value:function filterEvents(e){return new GroupEventList(this.events.filter(e))}},{key:"toString",value:function toString(){return new t(this).add("eventCount",this.events.length).add("eventIds",this.events.map(function(e){return e.id}).join(", ")).toString()}}]),GroupEventList}();module.exports=n});