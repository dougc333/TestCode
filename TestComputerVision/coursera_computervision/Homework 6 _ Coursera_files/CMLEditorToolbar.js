define("bundles/phoenix/components/CMLEditorToolbar",["require","exports","module","classnames","react-with-addons","react-bootstrap","css!./__styles__/CMLEditorToolbar"],function(require,exports,module){"use strict";function _defaults(e,n){for(var a=Object.getOwnPropertyNames(n),t=0;t<a.length;t++){var r=a[t],o=Object.getOwnPropertyDescriptor(n,r);o&&o.configurable&&void 0===e[r]&&Object.defineProperty(e,r,o)}return e}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _inherits(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):_defaults(t,e))}var t=function(){function defineProperties(o,r){for(var t=0;t<r.length;t++){var e=r[t];e.enumerable=e.enumerable||!1,e.configurable=!0,"value"in e&&(e.writable=!0),Object.defineProperty(o,e.key,e)}}return function(e,t,r){return t&&defineProperties(e.prototype,t),r&&defineProperties(e,r),e}}(),r=function get(a,l,s){var r=!0;e:for(;r;){var t=a,i=l,c=s;r=!1,null===t&&(t=Function.prototype);var e=Object.getOwnPropertyDescriptor(t,i);if(void 0===e){var o=Object.getPrototypeOf(t);if(null===o)return void 0;a=o,l=i,s=c,r=!0,e=o=void 0;continue e}if("value"in e)return e.value;var n=e.get;if(void 0===n)return void 0;return n.call(c)}},n=require("classnames"),e=require("react-with-addons"),o=require("react-bootstrap"),a=o.Tooltip,i=o.OverlayTrigger;require("css!./__styles__/CMLEditorToolbar");var c=function(o){function ToolbarButton(){_classCallCheck(this,ToolbarButton),r(Object.getPrototypeOf(ToolbarButton.prototype),"constructor",this).apply(this,arguments)}return _inherits(ToolbarButton,o),t(ToolbarButton,[{key:"render",value:function render(){var t=this.props.block,r=t.commandName;if("divider"===t.commandName)return e.createElement("div",{key:r,className:"scribe-toolbar-divider"});var o=t.commandName,s=t.disabledTags?t.disabledTags.join(","):"",c=t.tooltip,u=n("scribe-toolbar-button","scribe-toolbar-"+o),l=e.createElement("button",{key:r,"data-command-name":o,"data-disabled-tags":s,className:u}),p=function renderBtnWithTooltip(){var t=e.createElement(a,null,c);return e.createElement(i,{key:r,placement:"bottom",overlay:t,delayShow:600},l)};return c?p():l}}],[{key:"propTypes",value:{block:e.PropTypes.object.isRequired},enumerable:!0}]),ToolbarButton}(e.Component),l=function(o){function CMLEditorToolbar(){_classCallCheck(this,CMLEditorToolbar),r(Object.getPrototypeOf(CMLEditorToolbar.prototype),"constructor",this).apply(this,arguments)}return _inherits(CMLEditorToolbar,o),t(CMLEditorToolbar,[{key:"render",value:function render(){var t=this.props,r=t.blocks,o=t.style;if(0===r.length)return null;return e.createElement("div",{className:"rc-CMLEditorToolbar",style:o},r.map(function(t){return e.createElement(c,{key:t.commandName,block:t})}))}}],[{key:"propTypes",value:{style:e.PropTypes.object.isRequired,blocks:e.PropTypes.array.isRequired},enumerable:!0}]),CMLEditorToolbar}(e.Component);module.exports=l});