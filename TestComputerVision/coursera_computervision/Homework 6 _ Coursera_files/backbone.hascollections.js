define("bundles/assess/lib/backbone.hascollections",["require","exports","module","backbone","underscore"],function(require,exports,module){"use strict";var Backbone=require("backbone"),_=require("underscore"),e=Backbone.Model.extend({relations:{},set:function set(o,r,t){var e=this,n=void 0;_.isObject(o)?(n=_(o).clone(),t=r):(n={},n[o]=r),_(e.relations).each(function(i,o){if(_.has(e.attributes,o)||(e.attributes[o]=new i,e.attributes[o].on("all",e._onCollectionEvent,e),e.attributes[o].relationParent=e),!_.has(n,o))return;var r=e.attributes[o],a=n[o];t&&t.merge?_(a).each(function(e){var n=r.get(e.id);n?n.set(e,t):r.add(e,t)}):r.reset(a,t),delete n[o]}),Backbone.Model.prototype.set.call(e,n,t)},toJSON:function toJSON(){var e=this,t=Backbone.Model.prototype.toJSON.call(e);return _(e.relations).each(function(r,n){var o=e.attributes[n];t[n]=o.toJSON()}),t},_onCollectionEvent:function _onCollectionEvent(e){if(_(["change","add","remove"]).contains(e)){var t=void 0;t="change"==e?arguments[2]:arguments[3],this.trigger("change",this,t)}}});module.exports=e});