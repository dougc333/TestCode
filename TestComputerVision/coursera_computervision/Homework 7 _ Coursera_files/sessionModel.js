define("bundles/assess/assessmentTypes/phoenixQuiz/common/sessionModel",["require","exports","module","q","underscore","bundles/assess/assessmentTypes/phoenixQuiz/common/gradingAttemptModel","bundles/assess/assessmentTypes/SessionModel","bundles/assess/framework/QuestionCollection","js/lib/fsm","pages/open-course/assessment/models/quiz/evaluation"],function(require,exports,module){"use strict";var s=require("q"),_=require("underscore"),t=require("bundles/assess/assessmentTypes/phoenixQuiz/common/gradingAttemptModel"),e=require("bundles/assess/assessmentTypes/SessionModel"),n=require("bundles/assess/framework/QuestionCollection"),i=require("js/lib/fsm"),o=require("pages/open-course/assessment/models/quiz/evaluation"),r=e.extend(_.extend({},i.FiniteStateMachine,{defaults:{state:"nothing",sessionId:null,questionInstances:[],unansweredQuestions:0},relations:{questionInstances:n},logTransitions:!1,fsm:{states:["nothing","loading","load-error","unsubmitted","submitting","submit-error","submitted"],transitions:{loading:["nothing"],"load-error":["loading"],unsubmitted:["loading"],submitting:["unsubmitted","submit-error"],"submit-error":["submitting"],submitted:["loading","submitting"]}},initialize:function initialize(e,s){_(this).extend(_(s).pick("assessmentClient","verifiableId")),_.bindAll(this,"onFetchSessionIdSuccess","getState","onGetStateSuccess","onLoadError","onSubmitSuccess","onSubmitError"),this.listenTo(this.get("questionInstances"),"add",this.onQuestionAdded),this.set("evaluation",new o),this.set("gradingAttempt",new t)},submit:function submit(){this.transition("submitting");var s={responses:this.toResponseJson()},t=this.get("sessionId");return this.assessmentClient.callAction(t,"submitResponses",s,this.verifiableId).then(this.onSubmitSuccess,this.onSubmitError)},retake:function retake(){this.set(this.defaults),this.get("evaluation").reset(),this.get("gradingAttempt").reset(),this.trigger("questions:reset"),this.fetch()},toResponseJson:function toResponseJson(){return this.get("questionInstances").invoke("toResponseJson")},setState:function setState(s){this.get("questionInstances").addMerge(s.result.questions),this.get("evaluation").set(s.result.evaluation);var t=this.get("gradingAttempt");t.set(t.parse(s.gradingAttempt))},onLoadError:function onLoadError(s){console.error("Error loading quiz:",s),this.transitionIfNot("load-error")},onFetchSessionIdSuccess:function onFetchSessionIdSuccess(s){return this.set("sessionId",s),this.get("sessionId")},onGetStateSuccess:function onGetStateSuccess(s){this.setState(s);var t=s.result.evaluation?"submitted":"unsubmitted";this.transition(t)},onQuestionAdded:function onQuestionAdded(s){this.listenTo(s,"change",this.updateUnansweredQuestions);var t=this.get("questionInstances").indexOf(s);this.trigger("question:added",s,t)},updateUnansweredQuestions:function updateUnansweredQuestions(){var s=this.get("questionInstances").filter(function(s){return!s.get("isAnswered")});this.set("unansweredQuestions",s.length)},onSubmitSuccess:function onSubmitSuccess(s){this.setState(s),this.transition("submitted")},onSubmitError:function onSubmitError(s){this.transition("submit-error")},fetch:function fetch(){this.transition("loading"),this.fetchSessionId().then(this.getState).done()},fetchSessionId:function fetchSessionId(){var t=this.get("sessionId");if(t)return s.fcall(_.constant(t));return this.assessmentClient.getOrCreateSession().then(this.onFetchSessionIdSuccess,this.onLoadError)},getState:function getState(){var s=this.get("sessionId");return this.assessmentClient.callAction(s,"getState").then(this.onGetStateSuccess,this.onLoadError)}}));module.exports=r});